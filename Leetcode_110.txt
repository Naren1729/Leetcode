/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root){
        if(root == NULL){
            return 0;
        }
        int lh = height(root->left);
        int rh = height(root->right);
        int h = max(lh,rh)+1;
        return h;
    }
    bool hei(TreeNode* root){
        if(root == NULL){
            return true;
        }
        if(abs(height(root->left) - height(root->right)) >1){
            return false;
        }
        return (abs(height(root->left) - height(root->right)) <=1) && hei(root->left) && hei(root->right);
    }

    bool isBalanced(TreeNode* root) {
        return hei(root);
        
    }
};