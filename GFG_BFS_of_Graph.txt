//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    
    vector<int>v;
    void BFS(vector<int>adj[],int s, bool visited[]){
        queue<int>q;
        q.push(s);
        visited[s] = true;
        while(q.empty() == false){
            int u = q.front();
            q.pop();
            v.push_back(u);
            for(int x:adj[u]){
                if(visited[x] == false){
                    visited[x] = true;
                    q.push(x); 
                }
            }
        }
    }
    
    
    
    vector<int> bfsOfGraph(int n, vector<int> adj[]) {
        bool visited[n] ;
        for(int i = 0;i<n;i++){
            visited[i] = false;
        }
      //  for(int i = 0;i<n;i++){
         //   if(visited[i] == false){
                BFS(adj,0,visited);
        //    }
      //  }
        return v;
    }
};

//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >>

            E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            // 		adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.bfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends