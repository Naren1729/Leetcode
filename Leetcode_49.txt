class Solution {
public:

// int sum (string a){
//     int n = a.size();


//     int sum1 =0;


//     for(int i = 0;i<n;i++){
//         sum1 = sum1 + a[i];
//     }
//     return sum1;



// }






    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        // vector<vector<string>> result;

        // unordered_map<string,int> s;

        // int n = strs.size();
        // for(int i = 0;i<n;i++){
        //     s[strs[i]] =0;
        // }
        // if(s.size()== 1){
        //     result.push_back(strs);
        //     return result;
        // }

        // for(int i = 0;i<n;i++){
        //     string  b;
        //     b = strs[i];
        //    int  n1 = b.size();
        //     vector<string> v;
        //     for(int j = 0;j<n;j++){
        //         int s1 = sum(strs[i]);
        //         int s2 = sum(strs[j]);
        //         if(s1 == s2  && s[strs[j]]<1){
        //             v.push_back(strs[j]);
        //             s[strs[j]]++;
        //         }
        //     }
        //     if(!v.empty()){
        //         result.push_back(v);
        //     }
            


        // }
        // return result;
                unordered_map<string, vector<string>> mp;
        for (string s : strs) {
            string t = s; 
            sort(t.begin(), t.end());
            mp[t].push_back(s);
        }
        vector<vector<string>> anagrams;
        for (auto p : mp) { 
            anagrams.push_back(p.second);
        }
        return anagrams;
    }
};