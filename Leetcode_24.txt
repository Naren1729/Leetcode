/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head == NULL){
            return NULL;
        }
        ListNode* first;
        ListNode* second;
        if(head != NULL && head->next != NULL){
            first = head;
            second = head->next;

        }
        while(first != NULL && second != NULL){
            int temp = first->val;
            first->val = second->val;
            second->val = temp;
            if(first->next->next != NULL){
                first = first->next->next;
                second = first->next;
            }else{
                break;
            }
        }
        return head;
        
    }
};