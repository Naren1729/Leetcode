/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (head == nullptr || head->next == nullptr) {
        return head;
    }

    ListNode* dummy = new ListNode(0);  // Create a dummy node
    dummy->next = head;

    ListNode* prev = dummy;
    ListNode* curr = head;

    while (curr != nullptr && curr->next != nullptr) {
        if (curr->val == curr->next->val) {
            int duplicateVal = curr->val;

            // Skip all nodes with duplicate values
            while (curr != nullptr && curr->val == duplicateVal) {
                ListNode* temp = curr;
                curr = curr->next;
                delete temp;
            }

            prev->next = curr;
        } else {
            prev = curr;
            curr = curr->next;
        }
    }

    ListNode* newHead = dummy->next;
    delete dummy;
    return newHead;
    }
};