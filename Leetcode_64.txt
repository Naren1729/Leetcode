class Solution {
public:


    int sum(vector<vector<int>>& grid,int n , int m ,vector<vector<int>>& mat){

        if(n<0 || m < 0){
            return INT_MAX;
        }
        if(n==0 && m == 0){
            return grid[0][0];
        }

         int res = 0; 

        
        mat[0][0] = grid[0][0];

        if(mat[n][m] != -1){
            return mat[n][m];
        }else{
        
         res = min(sum(grid,n-1,m,mat),sum(grid,n,m-1,mat));
         res = res + grid[n][m];
         mat[n][m] = res;

        }

return res;


    }

    int minPathSum(vector<vector<int>>& grid) {
        
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> mat(n,vector<int>(m,-1));
        return sum(grid,n-1,m-1,mat);
        
    }
};