/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    void levelorder(TreeNode* root){
        queue<TreeNode*> q;
        if(root == NULL){
            return;
        }
        q.push(root);
        while(q.empty() == false){
            int count = q.size();
            vector<int> v;
            for(int i = 0;i<count;i++){
                TreeNode* curr = q.front();
                q.pop();

                v.push_back(curr->val);
                if(curr->left != NULL){
                    q.push(curr->left);
                }
                if(curr->right != NULL){
                    q.push(curr->right);
                }
            }
            res.push_back(v);

        }
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        levelorder(root);
        return res;
        
    }
};