
// class Solution {
// public:
//        std::vector<std::vector<std::vector<int>>> dp;
//     Solution() {
//         const int size = 51;
//         dp.resize(size, std::vector<std::vector<int>>(size, std::vector<int>(size, -1)));
//     }
//     int aabbab(int x, int y, int z,bool a, bool b, bool c){
//         if(x<0 || y<0 || z<0){
//             return 0;
//         }
//         if(dp[x][y][x] != -1){
//             return dp[x][y][z];
//         }
//         int op1 = 0;
//         int op2 = 0;
//         int op3 = 0;
//         if(a && y>0){
//             op1 = 2+aabbab(x,y-1,z,0,1,0);
//         }
//         if(b && (x>0 || z>0)){
//             op2 = max(2+ aabbab(x-1,y,z,1,0,0),2+aabbab(x,y,z-1,0,0,1));
//         }
//         if(c && (x>0 || z>0)){
//             op3 = max(2+ aabbab(x-1,y,z,1,0,0),2+aabbab(x,y,z-1,0,0,1));
//         }
//         if(a == 0 && b==0 && c==0){
//             op1 = max(2+aabbab(x,y-1,z,0,1,0),max(2+ aabbab(x-1,y,z,1,0,0),2+aabbab(x,y,z-1,0,0,1)));
//         }
//        return dp[x][y][z]=max(op1,max(op2,op3));
//     }
//     int longestString(int x, int y, int z) {
//         return aabbab(x,y,z,0,0,0);
        
//     }
// };

class Solution {
public:
    int longestString(int x, int y, int z) {
        int a = min(x, y);
        int res = z + a * 2 + (x > a || y > a);
        return res * 2;
    }
};