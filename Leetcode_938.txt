/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum(TreeNode* root,int l,int h){
        int sum1 = 0;
        if(root == NULL){
            return 0;
        }
        if(root->val <= h && root->val >=l){
            sum1 = root->val + sum(root->left,l,h) + sum(root->right,l,h);
        }else{
            sum1 = sum(root->left,l,h) + sum(root->right,l,h);
        }
        return sum1;
    }
    
    int rangeSumBST(TreeNode* root, int low, int high) {
        return sum(root,low,high);
    }
};