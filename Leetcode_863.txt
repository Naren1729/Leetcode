/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
vector<int> v;
    void Print(TreeNode* root,TreeNode* target,int k){
        if(root == NULL || k<0){
            return;
        }
     //   if(root->val == target->val){
            Print(root->left,target,k-1);
            Print(root->right,target,k-1);

        // }else{
        //     print(root->left,target,k);
        //     print(root->right,target,k);
        // }
        if(k==0 && root!= NULL ){
            v.push_back(root->val);
        }
        return;
    }

    int print1(TreeNode* root,TreeNode* target,int k){
        if(root == NULL){
            return -1;
        }
        if(root->val == target->val){
           // return 1;
           Print(root,target,k);
           return 0;
        }
        int lh = print1(root->left,target,k);
        if(lh != -1){
            if(lh +1 == k){
                v.push_back(root->val);
            }else{
                Print(root->right,target,k-lh-2);
            }
            return 1 + lh;
        }
        int rh = print1(root->right,target,k) ;
        if(rh != -1){
            if(rh +1 ==k){
                v.push_back(root->val);
            }else{
                Print(root->left,target,k-rh-2);
            }
            return 1+ rh;
        }
        return -1;



    }


    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {
        print1(root,target,k);
        return v;
        
    }
};